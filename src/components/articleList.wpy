<style lang="less">
.weui-media-box__info__meta {
  margin: 0;
  font-size: 12px;
}
.article-info {
  margin-top: 5px;
}
.article-title {
  white-space: normal;
  font-size: 14px;
}
.avatar {
  padding: 4px;
  border: 1px solid #ddd;
  border-radius: 4px;
  width: 50px;
  height: 50px;
}
.reply-count {
  background-color: #d8d8d8;
  float: right;
}
</style>
<template>
 <view class="weui-panel weui-panel_access">
    <view class="weui-panel__bd">
      <repeat for="{{ articles }}" wx:key="id" index="index" item="article">
        <navigator url="/pages/articles/show?id={{ article.id }}" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
          <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
            <image class="weui-media-box__thumb avatar" src="{{ article.user.avatar }}" />
          </view>
          <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
            <view class="weui-media-box__title article-title">{{ article.title }}</view>

            <view class="weui-media-box__info article-info">
              <view class="weui-media-box__info__meta">{{ article.category.title }} • </view>
              <view class="weui-media-box__info__meta">{{ article.user.name }} • </view>
              <view class="weui-media-box__info__meta">{{ article.updated_at_diff }}</view>
            </view>
          </view>
          <view class="weui-badge reply-count">{{ article.reply_count }}</view>
        </navigator>
      </repeat>
      <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
        <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import util from '@/utils/util'
  import api from '@/utils/api'

  export default class ArticleList extends wepy.component {
    data = {
      // 话题数据
      articles: [],
      // 有没有更多数据
      noMoreData: false,
      // 是否在加载中
      isLoading: false
    }
    props = {
      // 父页面传入，请求参数
      syncData: {
        type: Object,
        default: {}
      },
      // 父页面传入，请求url
      syncUrl: {
        type: String,
        default: 'articles'
      }
    }
    //  获取话题数据
    async getArticles(reset = false) {
      if (!this.syncData.page) {
        this.syncData.page = 1
      }

      this.syncData.include = 'user,category'
      try {
        // 请求接口，传入参数
        let articlesResponse = await api.request({
          url: this.syncUrl,
          data: this.syncData
        })

        if (articlesResponse.statusCode === 200) {
          let articles = articlesResponse.data.data

          // 格式化updated_at
          articles.forEach(function (article) {
            article.updated_at_diff = util.diffForHumans(article.updated_at)
          })
          // 如果传入参数 reset 为true，则覆盖 articles
          this.articles = reset ? articles : this.articles.concat(articles)

          let pagination = articlesResponse.data.meta.pagination

          // 根据分页设置是否还有更多数据
          if (pagination.current_page === pagination.total_pages) {
            this.noMoreData = true
          }
          this.$apply()
        }

        return articlesResponse
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }
    // 加载更多
    async loadMore () {
      // 如果没有更多数据，或者正在加载，直接返回
      if (this.noMoreData || this.isLoading) {
        return
      }
      // 开始请求之前设置 isLoading 为true
      this.isLoading = true
      this.syncData.page = this.syncData.page + 1
      await this.getArticles()

      // 开始结束后设置 isLoading 为 false
      this.isLoading = false
      this.$apply()
    }
    // 重新加载
    async reload() {
      this.noMoreData = false
      this.syncData.page = 1
      return await this.getArticles(true)
    }
  }
</script>
